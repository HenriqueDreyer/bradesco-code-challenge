spring.application.name=bradesco-code-challenge

## SSL
server.ssl.enabled=true

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/code-challenge.p12
# The password used to generate the certificate
server.ssl.key-store-password=dreyer123
# The alias mapped to the certificate
server.ssl.key-alias=bradesco-code-challenge

#trust store location
trust.store=classpath:keystore/code-challenge.p12
#trust store password
trust.store.password=dreyer123

## DATABASE
spring.docker.compose.enabled=true
spring.docker.compose.file=compose.yaml
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=jdbc:mysql://localhost:3306/challenge_db

# JPA Config
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true

## KAFKA
spring.kafka.bootstrap-servers=localhost:9094
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

## Servico PIX
servico.pix.cobranca=https://bradesco-code-challenge.wiremockapi.cloud/api/cob/
servico.pix.pagamento=https://bradesco-code-challenge.wiremockapi.cloud/api/pag/